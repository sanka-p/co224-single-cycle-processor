$date
	Thu Jun  1 00:51:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 32 $ INSTRUCTION_REG [31:0] $end
$var reg 1 % RESET $end
$var integer 32 & i [31:0] $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 ' INSTRUCTION [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 % RESET $end
$var wire 8 ) WRITEDATA [7:0] $end
$var wire 8 * REGOUT2 [7:0] $end
$var wire 8 + REGOUT1 [7:0] $end
$var reg 8 , ALUIN1 [7:0] $end
$var reg 8 - ALUIN2 [7:0] $end
$var reg 3 . ALUOP [2:0] $end
$var reg 1 / MUX_SEL_IMM $end
$var reg 1 0 MUX_SEL_NEG $end
$var reg 32 1 NEXT_PC_REG [31:0] $end
$var reg 32 2 PC_REG [31:0] $end
$var reg 8 3 TEMP_REG [7:0] $end
$var reg 1 4 WRITEENABLE $end
$scope module cpu_alu $end
$var wire 8 5 DATA1 [7:0] $end
$var wire 8 6 DATA2 [7:0] $end
$var wire 8 7 OUTPUT [7:0] $end
$var wire 3 8 SELECT [2:0] $end
$var reg 8 9 RESULT [7:0] $end
$upscope $end
$scope module cpu_reg_file $end
$var wire 1 # CLK $end
$var wire 8 : IN [7:0] $end
$var wire 3 ; INADDRESS [2:0] $end
$var wire 8 < OUT1 [7:0] $end
$var wire 3 = OUT1ADDRESS [2:0] $end
$var wire 8 > OUT2 [7:0] $end
$var wire 3 ? OUT2ADDRESS [2:0] $end
$var wire 1 % RESET $end
$var wire 1 4 WRITE $end
$var reg 8 @ OUT1REGISTER [7:0] $end
$var reg 8 A OUT2REGISTER [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 B \REGISTER[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 C \REGISTER[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 D \REGISTER[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 E \REGISTER[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 F \REGISTER[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 G \REGISTER[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 H \REGISTER[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 I \REGISTER[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
bx 1
x0
x/
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
b1000 &
0%
bx $
0#
bx "
bx !
$end
#4
b0 1
b0 !
b0 (
b0 2
1#
1%
#5
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b100 1
0%
#6
b0 ;
b0 =
b101 ?
b101 "
b101 $
b101 '
#7
b101 -
b101 6
14
1/
b0 .
b0 8
#8
b0 3
b0 ,
b0 5
b0 *
b0 >
b0 A
b0 +
b0 <
b0 @
b101 )
b101 7
b101 :
b101 9
0#
#12
1#
#13
b101 B
b100 !
b100 (
b100 2
#14
b1000 1
#15
b101 ,
b101 5
b1001 -
b1001 6
b101 +
b101 <
b101 @
b1 ;
b1 ?
b10000000000001001 "
b10000000000001001 $
b10000000000001001 '
#16
b1001 )
b1001 7
b1001 :
b1001 9
0#
#20
1#
#21
b1000 !
b1000 (
b1000 2
b1001 C
#22
b1100 1
#23
b1001 3
b1 -
b1 6
b1001 *
b1001 >
b1001 A
b10 ;
b1000000100000000000000001 "
b1000000100000000000000001 $
b1000000100000000000000001 '
#24
b1001 -
b1001 6
00
0/
b1 )
b1 7
b1 :
b1 9
0#
#25
b1001 )
b1001 7
b1001 :
b1001 9
#28
1#
#29
b1001 D
b1100 !
b1100 (
b1100 2
#30
b10000 1
#31
b11 ;
b10 =
b0 ?
b10000000110000001000000000 "
b10000000110000001000000000 $
b10000000110000001000000000 '
#32
b1 .
b1 8
0#
#33
b101 -
b101 6
b101 3
b1001 ,
b1001 5
b101 *
b101 >
b101 A
b1001 +
b1001 <
b1001 @
#34
b1110 )
b1110 7
b1110 :
b1110 9
#36
1#
#37
b10000 !
b10000 (
b10000 2
b1110 E
#38
b10100 1
#39
b100 ;
b11 =
b1 ?
b11000001000000001100000001 "
b11000001000000001100000001 $
b11000001000000001100000001 '
#40
10
0#
#41
b11111011 -
b11111011 6
b1110 ,
b1110 5
b11111011 3
b1001 *
b1001 >
b1001 A
b1110 +
b1110 <
b1110 @
#42
b11110111 -
b11110111 6
b11110111 3
#43
b101 )
b101 7
b101 :
b101 9
#44
1#
#45
b101 F
b10100 !
b10100 (
b10100 2
#46
b11000 1
#47
b0 ;
b0 =
b101 ?
b1110101 "
b1110101 $
b1110101 '
#48
b1110101 -
b1110101 6
1/
b0 .
b0 8
0#
#49
b101 ,
b101 5
b0 *
b0 >
b0 A
b101 +
b101 <
b101 @
b1110101 )
b1110101 7
b1110101 :
b1110101 9
#50
b0 3
#52
1#
#53
b11000 !
b11000 (
b11000 2
b1110101 B
#54
b11100 1
#55
b1110101 ,
b1110101 5
b10010010 -
b10010010 6
b1110101 +
b1110101 <
b1110101 @
b1 ;
b10 ?
b10000000010010010 "
b10000000010010010 $
b10000000010010010 '
#56
b10010010 )
b10010010 7
b10010010 :
b10010010 9
0#
#57
b1001 *
b1001 >
b1001 A
#58
b11110111 3
#60
1#
#61
b10010010 C
b11100 !
b11100 (
b11100 2
#62
b100000 1
#63
b0 -
b0 6
b101 ;
b1 =
b0 ?
b100000001010000000100000000 "
b100000001010000000100000000 $
b100000001010000000100000000 '
#64
b1001 -
b1001 6
b1001 3
0/
00
b10 .
b10 8
b0 )
b0 7
b0 :
b0 9
0#
#65
b1110101 -
b1110101 6
b1110101 3
b10010010 ,
b10010010 5
b1110101 *
b1110101 >
b1110101 A
b10010010 +
b10010010 <
b10010010 @
b1 )
b1 7
b1 :
b1 9
#66
b10000 )
b10000 7
b10000 :
b10000 9
#68
1#
#69
b100000 !
b100000 (
b100000 2
b10000 G
#70
b100100 1
#71
b110 ;
b101 =
b10 ?
b101000001100000010100000010 "
b101000001100000010100000010 $
b101000001100000010100000010 '
#72
b11 .
b11 8
0#
#73
b1001 -
b1001 6
b1001 3
b10000 ,
b10000 5
b1001 *
b1001 >
b1001 A
b10000 +
b10000 <
b10000 @
b11110111 )
b11110111 7
b11110111 :
b11110111 9
#74
b11001 )
b11001 7
b11001 :
b11001 9
#76
1#
#77
b11001 H
b100100 !
b100100 (
b100100 2
#78
b101000 1
#79
bx ;
bx =
bx ?
bx "
bx $
bx '
#80
0#
#81
bx -
bx 6
bx 3
bx ,
bx 5
bx *
bx >
bx A
bx +
bx <
bx @
#82
bx )
bx 7
bx :
bx 9
#84
1#
#85
b101000 !
b101000 (
b101000 2
#86
b101100 1
#88
0#
#92
1#
#93
b101100 !
b101100 (
b101100 2
#94
b110000 1
#96
0#
#100
1#
#101
b110000 !
b110000 (
b110000 2
#102
b110100 1
#104
0#
#108
1#
#109
b110100 !
b110100 (
b110100 2
#110
b111000 1
#112
0#
#116
1#
#117
b111000 !
b111000 (
b111000 2
#118
b111100 1
#120
0#
#124
1#
#125
b111100 !
b111100 (
b111100 2
#126
b1000000 1
#128
0#
#132
1#
#133
b1000000 !
b1000000 (
b1000000 2
#134
b1000100 1
#136
0#
#140
1#
#141
b1000100 !
b1000100 (
b1000100 2
#142
b1001000 1
#144
0#
#148
1#
#149
b1001000 !
b1001000 (
b1001000 2
#150
b1001100 1
#152
0#
#156
1#
#157
b1001100 !
b1001100 (
b1001100 2
#158
b1010000 1
#160
0#
#164
1#
#165
b1010000 !
b1010000 (
b1010000 2
#166
b1010100 1
#168
0#
#172
1#
#173
b1010100 !
b1010100 (
b1010100 2
#174
b1011000 1
#176
0#
#180
1#
#181
b1011000 !
b1011000 (
b1011000 2
#182
b1011100 1
#184
0#
#188
1#
#189
b1011100 !
b1011100 (
b1011100 2
#190
b1100000 1
#192
0#
#196
1#
#197
b1100000 !
b1100000 (
b1100000 2
#198
b1100100 1
#200
0#
#204
1#
#205
b1100100 !
b1100100 (
b1100100 2
#206
b1101000 1
#208
0#
#212
1#
#213
b1101000 !
b1101000 (
b1101000 2
#214
b1101100 1
#216
0#
#220
1#
#221
b1101100 !
b1101100 (
b1101100 2
#222
b1110000 1
#224
0#
#228
1#
#229
b1110000 !
b1110000 (
b1110000 2
#230
b1110100 1
#232
0#
#236
1#
#237
b1110100 !
b1110100 (
b1110100 2
#238
b1111000 1
#240
0#
#244
1#
#245
b1111000 !
b1111000 (
b1111000 2
#246
b1111100 1
#248
0#
#252
1#
#253
b1111100 !
b1111100 (
b1111100 2
#254
b10000000 1
#256
0#
#260
1#
#261
b10000000 !
b10000000 (
b10000000 2
#262
b10000100 1
#264
0#
#268
1#
#269
b10000100 !
b10000100 (
b10000100 2
#270
b10001000 1
#272
0#
#276
1#
#277
b10001000 !
b10001000 (
b10001000 2
#278
b10001100 1
#280
0#
#284
1#
#285
b10001100 !
b10001100 (
b10001100 2
#286
b10010000 1
#288
0#
#292
1#
#293
b10010000 !
b10010000 (
b10010000 2
#294
b10010100 1
#296
0#
#300
1#
#301
b10010100 !
b10010100 (
b10010100 2
#302
b10011000 1
#304
0#
#308
1#
#309
b10011000 !
b10011000 (
b10011000 2
#310
b10011100 1
#312
0#
#316
1#
#317
b10011100 !
b10011100 (
b10011100 2
#318
b10100000 1
#320
0#
#324
1#
#325
b10100000 !
b10100000 (
b10100000 2
#326
b10100100 1
#328
0#
#332
1#
#333
b10100100 !
b10100100 (
b10100100 2
#334
b10101000 1
#336
0#
#340
1#
#341
b10101000 !
b10101000 (
b10101000 2
#342
b10101100 1
#344
0#
#348
1#
#349
b10101100 !
b10101100 (
b10101100 2
#350
b10110000 1
#352
0#
#356
1#
#357
b10110000 !
b10110000 (
b10110000 2
#358
b10110100 1
#360
0#
#364
1#
#365
b10110100 !
b10110100 (
b10110100 2
#366
b10111000 1
#368
0#
#372
1#
#373
b10111000 !
b10111000 (
b10111000 2
#374
b10111100 1
#376
0#
#380
1#
#381
b10111100 !
b10111100 (
b10111100 2
#382
b11000000 1
#384
0#
#388
1#
#389
b11000000 !
b11000000 (
b11000000 2
#390
b11000100 1
#392
0#
#396
1#
#397
b11000100 !
b11000100 (
b11000100 2
#398
b11001000 1
#400
0#
#404
1#
#405
b11001000 !
b11001000 (
b11001000 2
#406
b11001100 1
#408
0#
#412
1#
#413
b11001100 !
b11001100 (
b11001100 2
#414
b11010000 1
#416
0#
#420
1#
#421
b11010000 !
b11010000 (
b11010000 2
#422
b11010100 1
#424
0#
#428
1#
#429
b11010100 !
b11010100 (
b11010100 2
#430
b11011000 1
#432
0#
#436
1#
#437
b11011000 !
b11011000 (
b11011000 2
#438
b11011100 1
#440
0#
#444
1#
#445
b11011100 !
b11011100 (
b11011100 2
#446
b11100000 1
#448
0#
#452
1#
#453
b11100000 !
b11100000 (
b11100000 2
#454
b11100100 1
#456
0#
#460
1#
#461
b11100100 !
b11100100 (
b11100100 2
#462
b11101000 1
#464
0#
#468
1#
#469
b11101000 !
b11101000 (
b11101000 2
#470
b11101100 1
#472
0#
#476
1#
#477
b11101100 !
b11101100 (
b11101100 2
#478
b11110000 1
#480
0#
#484
1#
#485
b11110000 !
b11110000 (
b11110000 2
#486
b11110100 1
#488
0#
#492
1#
#493
b11110100 !
b11110100 (
b11110100 2
#494
b11111000 1
#496
0#
#500
1#
#501
b11111000 !
b11111000 (
b11111000 2
#502
b11111100 1
#504
0#
#505
