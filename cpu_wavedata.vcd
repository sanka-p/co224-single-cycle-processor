$date
	Mon Jun 12 10:01:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 32 $ INSTRUCTION_REG [31:0] $end
$var reg 1 % RESET $end
$var integer 32 & i [31:0] $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 ' INSTRUCTION [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 % RESET $end
$var wire 1 ) ZERO $end
$var wire 8 * WRITEDATA [7:0] $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var reg 8 - ALUIN1 [7:0] $end
$var reg 8 . ALUIN2 [7:0] $end
$var reg 3 / ALUOP [2:0] $end
$var reg 1 0 IS_JUMP_ENABLED $end
$var reg 1 1 MUX_SEL_BEQ $end
$var reg 1 2 MUX_SEL_BNE $end
$var reg 1 3 MUX_SEL_IMM $end
$var reg 1 4 MUX_SEL_JUMP $end
$var reg 1 5 MUX_SEL_NEG $end
$var reg 32 6 NEXT_PC_REG [31:0] $end
$var reg 32 7 PC_PLUS_4 [31:0] $end
$var reg 32 8 PC_REG [31:0] $end
$var reg 1 9 SHIFT_DIRECTION $end
$var reg 32 : SIGN_EXTENDED_TARGET [31:0] $end
$var reg 8 ; TEMP_REG [7:0] $end
$var reg 1 < WRITEENABLE $end
$scope module cpu_alu $end
$var wire 8 = DATA1 [7:0] $end
$var wire 8 > DATA2 [7:0] $end
$var wire 8 ? OUTPUT [7:0] $end
$var wire 3 @ SELECT [2:0] $end
$var wire 1 9 SHIFT_DIRECTION $end
$var wire 1 ) ZERO $end
$var wire 8 A SLR_REG [7:0] $end
$var wire 8 B SLL_REG [7:0] $end
$var wire 8 C SAR_REG [7:0] $end
$var wire 8 D RROT_REG [7:0] $end
$var wire 8 E MULT_REG [7:0] $end
$var reg 8 F RESULT [7:0] $end
$var reg 1 G ZERO_REG $end
$scope module arith_rshifter $end
$var wire 8 H OPERAND1 [7:0] $end
$var wire 8 I OPERAND2 [7:0] $end
$var wire 8 J OUTPUT [7:0] $end
$var reg 8 K TEMP [7:0] $end
$upscope $end
$scope module logic_lshifter $end
$var wire 8 L OPERAND1 [7:0] $end
$var wire 8 M OPERAND2 [7:0] $end
$var wire 8 N OUTPUT [7:0] $end
$var reg 8 O TEMP [7:0] $end
$upscope $end
$scope module logic_rshifter $end
$var wire 8 P OPERAND1 [7:0] $end
$var wire 8 Q OPERAND2 [7:0] $end
$var wire 8 R OUTPUT [7:0] $end
$var reg 8 S TEMP [7:0] $end
$upscope $end
$scope module multiplier $end
$var wire 8 T MULTIPLICAND [7:0] $end
$var wire 8 U MULTIPLIER [7:0] $end
$var reg 8 V INTERMEDIATE [7:0] $end
$var reg 8 W PRODUCT [7:0] $end
$upscope $end
$scope module rrotater $end
$var wire 8 X OPERAND1 [7:0] $end
$var wire 8 Y OPERAND2 [7:0] $end
$var wire 8 Z OUTPUT [7:0] $end
$var reg 8 [ TEMP [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_reg_file $end
$var wire 1 # CLK $end
$var wire 8 \ IN [7:0] $end
$var wire 3 ] INADDRESS [2:0] $end
$var wire 8 ^ OUT1 [7:0] $end
$var wire 3 _ OUT1ADDRESS [2:0] $end
$var wire 8 ` OUT2 [7:0] $end
$var wire 3 a OUT2ADDRESS [2:0] $end
$var wire 1 % RESET $end
$var wire 1 < WRITE $end
$var reg 8 b OUT1REGISTER [7:0] $end
$var reg 8 c OUT2REGISTER [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 d \REGISTER[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 e \REGISTER[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 f \REGISTER[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 g \REGISTER[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 h \REGISTER[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 i \REGISTER[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 j \REGISTER[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module cpu_reg_file $end
$var reg 8 k \REGISTER[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
xG
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
x<
bx ;
bx :
x9
bx 8
bx 7
bx 6
x5
x4
x3
x2
x1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
bx '
b1000 &
0%
bx $
0#
bx "
bx !
$end
#4
b0 6
b0 7
b0 !
b0 (
b0 8
1#
1%
#5
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b100 7
0%
#6
b0 :
b0 ]
b0 _
b10 a
b100 6
b10 "
b10 $
b10 '
#7
b0 V
bx E
bx W
b0xxxxxx A
b0xxxxxx R
b0xxxxxx S
bx00 B
bx00 N
bx00 O
b10 .
b10 >
b10 I
b10 M
b10 Q
b10 U
b10 Y
00
02
01
04
1<
05
13
b0 /
b0 @
#8
b0 ;
b0 B
b0 N
b0 O
b0 A
b0 R
b0 S
b0 E
b0 W
b0 C
b0 J
b0 K
b0 D
b0 Z
b0 [
b0 -
b0 =
b0 H
b0 L
b0 P
b0 T
b0 X
b0 +
b0 `
b0 c
b0 ,
b0 ^
b0 b
0)
0G
b10 *
b10 ?
b10 \
b10 F
0#
#12
1#
#13
b10 d
b100 !
b100 (
b100 8
#14
b1000 7
#15
b10 D
b10 Z
b10 [
b10000 E
b10000 W
b0 V
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b1000 .
b1000 >
b1000 I
b1000 M
b1000 Q
b1000 U
b1000 Y
b10 ,
b10 ^
b10 b
b100 :
b1 ]
b0 a
b10000000000001000 "
b10000000000001000 $
b10000000000001000 '
#16
b1000 *
b1000 ?
b1000 \
b1000 F
b1000 6
0#
#17
b10 ;
b10 +
b10 `
b10 c
#20
1#
#21
b1000 !
b1000 (
b1000 8
b1000 e
#22
b1100 7
#23
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
b1 _
b1 a
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#24
b111 /
b111 @
b1 *
b1 ?
b1 \
b1 F
b1100 6
0#
#25
b1000 ;
b10000 D
b10000 Z
b10000 [
b100 C
b100 J
b100 K
b0 V
b1000 E
b1000 W
b100 A
b100 R
b100 S
b10000 B
b10000 N
b10000 O
b1000 -
b1000 =
b1000 H
b1000 L
b1000 P
b1000 T
b1000 X
b1000 +
b1000 `
b1000 c
b1000 ,
b1000 ^
b1000 b
b100 *
b100 ?
b100 \
b100 F
#26
b10000 *
b10000 ?
b10000 \
b10000 F
#28
1#
#29
b10000 e
b1100 !
b1100 (
b1100 8
#30
b10000 7
#31
b10000 ;
b100000 B
b100000 N
b100000 O
b1000 A
b1000 R
b1000 S
b0 V
b10000 E
b10000 W
b1000 C
b1000 J
b1000 K
b100000 D
b100000 Z
b100000 [
b10000 -
b10000 =
b10000 H
b10000 L
b10000 P
b10000 T
b10000 X
b10000 +
b10000 `
b10000 c
b10000 ,
b10000 ^
b10000 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#32
b10000 D
b10000 Z
b10000 [
b10000 C
b10000 J
b10000 K
b0 E
b0 W
b10000 A
b10000 R
b10000 S
b10000 B
b10000 N
b10000 O
b10000 .
b10000 >
b10000 I
b10000 M
b10000 Q
b10000 U
b10000 Y
10
12
0<
03
15
b1 /
b1 @
b100000 *
b100000 ?
b100000 \
b100000 F
b10000 6
0#
#33
b11110000 .
b11110000 >
b11110000 I
b11110000 M
b11110000 Q
b11110000 U
b11110000 Y
b10 B
b10 N
b10 O
b10 A
b10 R
b10 S
b11100000 E
b11100000 W
b0 V
b10 C
b10 J
b10 K
b10 D
b10 Z
b10 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b11110000 ;
b10 ,
b10 ^
b10 b
#34
b1000 6
b11110010 *
b11110010 ?
b11110010 \
b11110010 F
#36
1#
#37
b1000 !
b1000 (
b1000 8
#38
b1100 7
#39
b100 :
b1 ]
b1 _
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#40
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
b10000 ;
00
02
1<
13
05
b111 /
b111 @
b10000 6
0#
#41
b100000 D
b100000 Z
b100000 [
b1000 C
b1000 J
b1000 K
b0 V
b10000 E
b10000 W
b1000 A
b1000 R
b1000 S
b100000 B
b100000 N
b100000 O
b10000 -
b10000 =
b10000 H
b10000 L
b10000 P
b10000 T
b10000 X
b10000 ,
b10000 ^
b10000 b
b100 *
b100 ?
b100 \
b100 F
#42
b100000 *
b100000 ?
b100000 \
b100000 F
b1100 6
#44
1#
#45
b100000 e
b1100 !
b1100 (
b1100 8
#46
b10000 7
#47
b100000 ;
b1000000 B
b1000000 N
b1000000 O
b10000 A
b10000 R
b10000 S
b0 V
b100000 E
b100000 W
b10000 C
b10000 J
b10000 K
b1000000 D
b1000000 Z
b1000000 [
b100000 -
b100000 =
b100000 H
b100000 L
b100000 P
b100000 T
b100000 X
b100000 +
b100000 `
b100000 c
b100000 ,
b100000 ^
b100000 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#48
b100000 D
b100000 Z
b100000 [
b100000 C
b100000 J
b100000 K
b0 E
b0 W
b100000 A
b100000 R
b100000 S
b100000 B
b100000 N
b100000 O
b100000 .
b100000 >
b100000 I
b100000 M
b100000 Q
b100000 U
b100000 Y
10
12
0<
03
15
b1 /
b1 @
b1000000 *
b1000000 ?
b1000000 \
b1000000 F
b10000 6
0#
#49
b11100000 .
b11100000 >
b11100000 I
b11100000 M
b11100000 Q
b11100000 U
b11100000 Y
b10 B
b10 N
b10 O
b10 A
b10 R
b10 S
b11000000 E
b11000000 W
b0 V
b10 C
b10 J
b10 K
b10 D
b10 Z
b10 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b11100000 ;
b10 ,
b10 ^
b10 b
#50
b1000 6
b11100010 *
b11100010 ?
b11100010 \
b11100010 F
#52
1#
#53
b1000 !
b1000 (
b1000 8
#54
b1100 7
#55
b100 :
b1 ]
b1 _
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#56
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
b100000 ;
00
02
1<
13
05
b111 /
b111 @
b10000 6
0#
#57
b1000000 D
b1000000 Z
b1000000 [
b10000 C
b10000 J
b10000 K
b0 V
b100000 E
b100000 W
b10000 A
b10000 R
b10000 S
b1000000 B
b1000000 N
b1000000 O
b100000 -
b100000 =
b100000 H
b100000 L
b100000 P
b100000 T
b100000 X
b100000 ,
b100000 ^
b100000 b
b100 *
b100 ?
b100 \
b100 F
#58
b1000000 *
b1000000 ?
b1000000 \
b1000000 F
b1100 6
#60
1#
#61
b1000000 e
b1100 !
b1100 (
b1100 8
#62
b10000 7
#63
b1000000 ;
b10000000 B
b10000000 N
b10000000 O
b100000 A
b100000 R
b100000 S
b0 V
b1000000 E
b1000000 W
b100000 C
b100000 J
b100000 K
b10000000 D
b10000000 Z
b10000000 [
b1000000 -
b1000000 =
b1000000 H
b1000000 L
b1000000 P
b1000000 T
b1000000 X
b1000000 +
b1000000 `
b1000000 c
b1000000 ,
b1000000 ^
b1000000 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#64
b1000000 D
b1000000 Z
b1000000 [
b1000000 C
b1000000 J
b1000000 K
b0 E
b0 W
b1000000 A
b1000000 R
b1000000 S
b1000000 B
b1000000 N
b1000000 O
b1000000 .
b1000000 >
b1000000 I
b1000000 M
b1000000 Q
b1000000 U
b1000000 Y
10
12
0<
03
15
b1 /
b1 @
b10000000 *
b10000000 ?
b10000000 \
b10000000 F
b10000 6
0#
#65
b11000000 .
b11000000 >
b11000000 I
b11000000 M
b11000000 Q
b11000000 U
b11000000 Y
b10 B
b10 N
b10 O
b10 A
b10 R
b10 S
b10000000 E
b10000000 W
b0 V
b10 C
b10 J
b10 K
b10 D
b10 Z
b10 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b11000000 ;
b10 ,
b10 ^
b10 b
#66
b1000 6
b11000010 *
b11000010 ?
b11000010 \
b11000010 F
#68
1#
#69
b1000 !
b1000 (
b1000 8
#70
b1100 7
#71
b100 :
b1 ]
b1 _
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#72
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
b1000000 ;
00
02
1<
13
05
b111 /
b111 @
b10000 6
0#
#73
b10000000 D
b10000000 Z
b10000000 [
b100000 C
b100000 J
b100000 K
b0 V
b1000000 E
b1000000 W
b100000 A
b100000 R
b100000 S
b10000000 B
b10000000 N
b10000000 O
b1000000 -
b1000000 =
b1000000 H
b1000000 L
b1000000 P
b1000000 T
b1000000 X
b1000000 ,
b1000000 ^
b1000000 b
b100 *
b100 ?
b100 \
b100 F
#74
b10000000 *
b10000000 ?
b10000000 \
b10000000 F
b1100 6
#76
1#
#77
b10000000 e
b1100 !
b1100 (
b1100 8
#78
b10000 7
#79
b10000000 ;
b0 B
b0 N
b0 O
b1000000 A
b1000000 R
b1000000 S
b0 V
b10000000 E
b10000000 W
b11000000 C
b11000000 J
b11000000 K
b1 D
b1 Z
b1 [
b10000000 -
b10000000 =
b10000000 H
b10000000 L
b10000000 P
b10000000 T
b10000000 X
b10000000 +
b10000000 `
b10000000 c
b10000000 ,
b10000000 ^
b10000000 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#80
b10000000 D
b10000000 Z
b10000000 [
b10000000 C
b10000000 J
b10000000 K
b0 E
b0 W
b10000000 A
b10000000 R
b10000000 S
b10000000 B
b10000000 N
b10000000 O
b10000000 .
b10000000 >
b10000000 I
b10000000 M
b10000000 Q
b10000000 U
b10000000 Y
10
12
0<
03
15
b1 /
b1 @
b1 *
b1 ?
b1 \
b1 F
b10000 6
0#
#81
b10 B
b10 N
b10 O
b10 A
b10 R
b10 S
b10 C
b10 J
b10 K
b10 D
b10 Z
b10 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b10 ,
b10 ^
b10 b
#82
b1000 6
b10000010 *
b10000010 ?
b10000010 \
b10000010 F
#84
1#
#85
b1000 !
b1000 (
b1000 8
#86
b1100 7
#87
b100 :
b1 ]
b1 _
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#88
b100 D
b100 Z
b100 [
b1 C
b1 J
b1 K
b10 E
b10 W
b0 V
b1 A
b1 R
b1 S
b100 B
b100 N
b100 O
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
00
02
1<
13
05
b111 /
b111 @
b10000 6
0#
#89
b0 B
b0 N
b0 O
b1000000 A
b1000000 R
b1000000 S
b0 V
b10000000 E
b10000000 W
b11000000 C
b11000000 J
b11000000 K
b1 D
b1 Z
b1 [
b10000000 -
b10000000 =
b10000000 H
b10000000 L
b10000000 P
b10000000 T
b10000000 X
b10000000 ,
b10000000 ^
b10000000 b
b100 *
b100 ?
b100 \
b100 F
#90
b1 *
b1 ?
b1 \
b1 F
b1100 6
#92
1#
#93
b1 e
b1100 !
b1100 (
b1100 8
#94
b10000 7
#95
b1 ;
b10 D
b10 Z
b10 [
b0 C
b0 J
b0 K
b0 V
b1 E
b1 W
b0 A
b0 R
b0 S
b10 B
b10 N
b10 O
b1 -
b1 =
b1 H
b1 L
b1 P
b1 T
b1 X
b1 +
b1 `
b1 c
b1 ,
b1 ^
b1 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#96
10
12
0<
03
15
b1 /
b1 @
b10 *
b10 ?
b10 \
b10 F
b10000 6
0#
#97
b11111111 .
b11111111 >
b11111111 I
b11111111 M
b11111111 Q
b11111111 U
b11111111 Y
b0 B
b0 N
b0 O
b0 A
b0 R
b0 S
b0 V
b11111110 E
b11111110 W
bx C
bx J
bx K
b1 D
b1 Z
b1 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b11111111 ;
b10 ,
b10 ^
b10 b
#98
b1000 6
b1 *
b1 ?
b1 \
b1 F
#100
1#
#101
b1000 !
b1000 (
b1000 8
#102
b1100 7
#103
b100 :
b1 ]
b1 _
b10000000000010000000100000001 "
b10000000000010000000100000001 $
b10000000000010000000100000001 '
#104
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b1 .
b1 >
b1 I
b1 M
b1 Q
b1 U
b1 Y
b1 ;
00
02
1<
13
05
b111 /
b111 @
b10000 6
0#
#105
b10 D
b10 Z
b10 [
b0 C
b0 J
b0 K
b0 V
b1 E
b1 W
b0 A
b0 R
b0 S
b10 B
b10 N
b10 O
b1 -
b1 =
b1 H
b1 L
b1 P
b1 T
b1 X
b1 ,
b1 ^
b1 b
b100 *
b100 ?
b100 \
b100 F
#106
b10 *
b10 ?
b10 \
b10 F
b1100 6
#108
1#
#109
b10 e
b1100 !
b1100 (
b1100 8
#110
b10000 7
#111
b10 ;
b100 B
b100 N
b100 O
b1 A
b1 R
b1 S
b0 V
b10 E
b10 W
b1 C
b1 J
b1 K
b100 D
b100 Z
b100 [
b10 -
b10 =
b10 H
b10 L
b10 P
b10 T
b10 X
b10 +
b10 `
b10 c
b10 ,
b10 ^
b10 b
b11111111111111111111111111111000 :
b110 ]
b0 _
b1101111111100000000000000001 "
b1101111111100000000000000001 $
b1101111111100000000000000001 '
#112
b1000 D
b1000 Z
b1000 [
b0 C
b0 J
b0 K
b0 V
b100 E
b100 W
b0 A
b0 R
b0 S
b1000 B
b1000 N
b1000 O
b10 .
b10 >
b10 I
b10 M
b10 Q
b10 U
b10 Y
10
12
0<
03
15
b1 /
b1 @
b100 *
b100 ?
b100 \
b100 F
b10000 6
0#
#113
b0 B
b0 N
b0 O
b0 V
b11111100 E
b11111100 W
bx C
bx J
bx K
b10000000 D
b10000000 Z
b10000000 [
b11111110 .
b11111110 >
b11111110 I
b11111110 M
b11111110 Q
b11111110 U
b11111110 Y
b11111110 ;
#114
00
1)
1G
b1000 6
b0 *
b0 ?
b0 \
b0 F
#116
b10000 6
1#
#117
b10000 !
b10000 (
b10000 8
#118
b10100 7
#119
bx00 :
bx ]
bx _
bx a
bx "
bx $
bx '
#120
b10100 6
0#
#121
bx D
bx Z
bx [
bx0000000 V
bx E
bx W
bx -
bx =
bx H
bx L
bx P
bx T
bx X
bx +
bx `
bx c
bx ,
bx ^
bx b
#122
bx0000000 V
bx E
bx W
bx .
bx >
bx I
bx M
bx Q
bx U
bx Y
bx ;
#123
10
0)
0G
bx *
bx ?
bx \
bx F
#124
1#
#125
bx !
bx (
bx 8
bx 6
#126
bx 7
#128
0#
#132
1#
#136
0#
#140
1#
#144
0#
#148
1#
#152
0#
#156
1#
#160
0#
#164
1#
#168
0#
#172
1#
#176
0#
#180
1#
#184
0#
#188
1#
#192
0#
#196
1#
#200
0#
#204
1#
#208
0#
#212
1#
#216
0#
#220
1#
#224
0#
#228
1#
#232
0#
#236
1#
#240
0#
#244
1#
#248
0#
#252
1#
#256
0#
#260
1#
#264
0#
#268
1#
#272
0#
#276
1#
#280
0#
#284
1#
#288
0#
#292
1#
#296
0#
#300
1#
#304
0#
#308
1#
#312
0#
#316
1#
#320
0#
#324
1#
#328
0#
#332
1#
#336
0#
#340
1#
#344
0#
#348
1#
#352
0#
#356
1#
#360
0#
#364
1#
#368
0#
#372
1#
#376
0#
#380
1#
#384
0#
#388
1#
#392
0#
#396
1#
#400
0#
#404
1#
#408
0#
#412
1#
#416
0#
#420
1#
#424
0#
#428
1#
#432
0#
#436
1#
#440
0#
#444
1#
#448
0#
#452
1#
#456
0#
#460
1#
#464
0#
#468
1#
#472
0#
#476
1#
#480
0#
#484
1#
#488
0#
#492
1#
#496
0#
#500
1#
#504
0#
#505
